$date
	Thu Aug 28 21:04:13 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module adder_subtractor_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module adder_subtractor_instance $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$scope module four_bit_adder_instance $end
$var wire 4 ) a [3:0] $end
$var wire 4 * b [3:0] $end
$var wire 1 % cin $end
$var wire 4 + s [3:0] $end
$var wire 1 " cout $end
$var wire 3 , c [3:1] $end
$scope module stage0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 % cin $end
$var wire 1 / cout $end
$var wire 1 0 s $end
$upscope $end
$scope module stage1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 1 4 cout $end
$var wire 1 5 s $end
$upscope $end
$scope module stage2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 cin $end
$var wire 1 9 cout $end
$var wire 1 : s $end
$upscope $end
$scope module stage3 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 " cout $end
$var wire 1 > s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0>
0=
1<
1;
0:
09
08
07
06
15
04
03
12
01
00
0/
0.
0-
b0 ,
b10 +
b1010 *
b1000 )
b10 (
b1010 '
b1000 &
0%
b1010 $
b1000 #
1"
b10 !
$end
#20
13
b1 ,
1/
0"
15
1:
1>
1.
02
17
0<
b101 *
b1110 !
b1110 (
b1110 +
00
1%
#40
