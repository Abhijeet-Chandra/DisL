$date
	Thu Aug 21 00:28:47 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module bcd_adder_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout2 $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module bcd_adder $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( c $end
$var wire 1 % cin $end
$var wire 4 ) z [3:0] $end
$var wire 4 * s [3:0] $end
$var wire 1 + k $end
$var wire 1 " cout2 $end
$scope module four_bit_adder_instance0 $end
$var wire 4 , a [3:0] $end
$var wire 4 - b [3:0] $end
$var wire 1 % cin $end
$var wire 4 . s [3:0] $end
$var wire 1 + cout $end
$var wire 3 / c [3:1] $end
$scope module stage0 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 % cin $end
$var wire 1 2 cout $end
$var wire 1 3 s $end
$upscope $end
$scope module stage1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 s $end
$upscope $end
$scope module stage2 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = s $end
$upscope $end
$scope module stage3 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ cin $end
$var wire 1 + cout $end
$var wire 1 A s $end
$upscope $end
$upscope $end
$scope module four_bit_adder_instance1 $end
$var wire 4 B a [3:0] $end
$var wire 4 C b [3:0] $end
$var wire 1 % cin $end
$var wire 4 D s [3:0] $end
$var wire 1 " cout $end
$var wire 3 E c [3:1] $end
$scope module stage0 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 % cin $end
$var wire 1 H cout $end
$var wire 1 I s $end
$upscope $end
$scope module stage1 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 L cin $end
$var wire 1 M cout $end
$var wire 1 N s $end
$upscope $end
$scope module stage2 $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 Q cin $end
$var wire 1 R cout $end
$var wire 1 S s $end
$upscope $end
$scope module stage3 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 V cin $end
$var wire 1 " cout $end
$var wire 1 W s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0W
1V
0U
1T
1S
1R
1Q
1P
1O
0N
1M
0L
1K
1J
1I
0H
0G
1F
b110 E
b101 D
b110 C
b1111 B
1A
0@
1?
0>
1=
0<
0;
0:
19
18
07
06
05
14
13
02
01
10
b0 /
b1111 .
b1000 -
b111 ,
0+
b101 *
b1111 )
1(
b1000 '
b111 &
0%
b1000 $
b111 #
1"
b101 !
$end
#20
0V
0R
0Q
b0 E
0M
1N
1S
0K
0P
0W
0"
b0 C
0(
b110 !
b110 *
b110 D
0I
0T
0F
0A
b110 )
b110 .
b110 B
03
15
0?
00
04
b10 $
b10 '
b10 -
b100 #
b100 &
b100 ,
#40
